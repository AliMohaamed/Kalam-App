generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(cuid())
  email       String    @unique
  displayName String
  image       String?
  googleId    String?   @unique

  // A user can be part of many conversations
  conversations ConversationParticipant[]

  // A user can send many messages
  sentMessages Message[] @relation("SentMessages")

  // A user can receive many messages
  receivedMessages Message[] @relation("ReceivedMessages")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Conversation {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // A conversation has many participants (users)
  participants ConversationParticipant[]

  // A conversation has many messages
  messages Message[]
}

model ConversationParticipant {
  id             String @id @default(cuid())
  userId         String
  conversationId String

  // Establish relationships
  user         User         @relation(fields: [userId], references: [id])
  conversation Conversation @relation(fields: [conversationId], references: [id])

  @@unique([userId, conversationId]) // A user can only be in a conversation once
}

model Message {
  id             String   @id @default(cuid())
  content        String
  createdAt      DateTime @default(now())
  read           Boolean  @default(false) // For the "read" status feature

  conversationId String
  senderId       String
  recipientId    String // We keep this for easy lookup

  // Establish relationships
  conversation Conversation @relation(fields: [conversationId], references: [id])
  sender       User         @relation("SentMessages", fields: [senderId], references: [id])
  recipient    User         @relation("ReceivedMessages", fields: [recipientId], references: [id])
}